<%@ jet
	imports="
		org.talend.core.model.process.INode
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List
	"
%>
	<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();

    String accessKey = ElementParameterParser.getValue(node, "__ACCESS_KEY__");

	String useExistingConn = ElementParameterParser.getValue(node,"__USE_EXISTING_CONNECTION__");
	boolean isSourceFolder=("true").equals(ElementParameterParser.getValue(node,"__IS_SOUCE_FOLDER__"));
	String srcBucketName=ElementParameterParser.getValue(node,"__SOURCE_BUCKET__");
	String sourceObjectKey = ElementParameterParser.getValue(node,"__SOURCE_OBJECTKEY__");
	String targetBucket=ElementParameterParser.getValue(node,"__TARGET_BUCKET__");
	String targetFolder=ElementParameterParser.getValue(node,"__TARGET_FOLDER__");
	String newObjectKey = ElementParameterParser.getValue(node,"__NEW_OBJECTKEY__");
	String actionType = ElementParameterParser.getValue(node,"__ACTION_TYPE__");
	boolean isRename = ("true").equals(ElementParameterParser.getValue(node,"__RENAME__"));
	boolean useSrcPath = ("true").equals(ElementParameterParser.getValue(node,"__USE_SRC_PATH__"));
	String dieOnError = ElementParameterParser.getValue(node, "__DIE_ON_ERROR__");
	boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));

	String connection = ElementParameterParser.getValue(node,"__CONNECTION__");
	String authType = ElementParameterParser.getValue(node, "__AUTH_TYPE__");

	if(("true").equals(useExistingConn)) {
		List< ? extends INode> nodes =  node.getProcess().getNodesOfType("tGSConnection");
		for (INode ne : nodes) {
			if (connection.equals(ne.getUniqueName())) {
				authType = ElementParameterParser.getValue(ne, "__AUTH_TYPE__");
				break;
			}
		}
	}

if ("USER_ACCOUNT_HMAC".equals(authType)){
%>
	org.jets3t.service.impl.rest.httpclient.GoogleStorageService service_<%=cid%> = null;
	try {
		<%
		if(("true").equals(useExistingConn)) {
			%>
			service_<%=cid%> = (org.jets3t.service.impl.rest.httpclient.GoogleStorageService)globalMap.get("service_<%=connection%>");
			<%
			if(isLog4jEnabled){
			%>
				log.info("<%=cid%> - Get an free connection from " + "<%=connection%>" + ".");
			<%
			}
		} else {
			String passwordFieldName = "__SECRET_KEY__";
			final String GoogleTracker = org.talend.core.utils.TrackerUtil.getGoogleTracker();
%>

			<%@ include file="@{org.talend.designer.components.localprovider}/components/templates/password.javajet"%>

			org.jets3t.service.security.GSCredentials credentials_<%=cid%> = new org.jets3t.service.security.GSCredentials(<%=accessKey%>,decryptedPassword_<%=cid%>);
			service_<%=cid%> = new org.jets3t.service.impl.rest.httpclient.GoogleStorageService(credentials_<%=cid%>," <%=GoogleTracker%>",null);
			service_<%=cid%>.getAccountOwner();
		<%
		}
		%>
		String targetFolder_<%=cid%>=<%=targetFolder%>;
		if(targetFolder_<%=cid%>.length()>0 && !targetFolder_<%=cid%>.endsWith("/")){
			targetFolder_<%=cid%>=targetFolder_<%=cid%>+"/";
		}
		<%
		if(isSourceFolder){
		%>
			org.jets3t.service.model.GSObject[] objects_<%=cid%> = service_<%=cid%>.listObjects(<%=srcBucketName%>,<%=sourceObjectKey%>,null);
			for (org.jets3t.service.model.GSObject objectSummary_<%=cid%> : objects_<%=cid%>) {
				String srcObjectKey_<%=cid%>=objectSummary_<%=cid%>.getKey();
				org.jets3t.service.model.GSObject tarObj_<%=cid%>=service_<%=cid%>.getObject(<%=srcBucketName%>, objectSummary_<%=cid%>.getKey());
				String targetName_<%=cid%> = objectSummary_<%=cid%>.getKey();
				<% if(!useSrcPath) { %>
					targetName_<%=cid%> = targetName_<%=cid%>.substring(targetName_<%=cid%>.lastIndexOf('/') + 1);
				<% } %>
				tarObj_<%=cid%>.setKey(targetFolder_<%=cid%>+targetName_<%=cid%>);
				<%
				if("COPY".equals(actionType) ){
				%>
					service_<%=cid%>.copyObject(<%=srcBucketName%>, srcObjectKey_<%=cid%>, <%=targetBucket%>,tarObj_<%=cid%> , false);
				<%
				}else{
				%>
					service_<%=cid%>.moveObject(<%=srcBucketName%>, srcObjectKey_<%=cid%>, <%=targetBucket%>, tarObj_<%=cid%>, false);
				<%
				}
				%>
				tarObj_<%=cid%>.closeDataInputStream();
			}
		<%
		}else{
		%>
			org.jets3t.service.model.GSObject tarObj_<%=cid%> = service_<%=cid%>.getObject(<%=srcBucketName%>, <%=sourceObjectKey%>);
			<%
			if(isRename){
			%>
				tarObj_<%=cid%>.setKey(targetFolder_<%=cid%>+<%=newObjectKey%>);
			<%
			}else{
			%>
				String targetName_<%=cid%> = tarObj_<%=cid%>.getKey();
				<% if(!useSrcPath) { %>
					targetName_<%=cid%> = targetName_<%=cid%>.substring(targetName_<%=cid%>.lastIndexOf('/') + 1);
				<% } %>
				tarObj_<%=cid%>.setKey(targetFolder_<%=cid%>+targetName_<%=cid%>);
			<%
			}
			if("COPY".equals(actionType) ){
			%>
				service_<%=cid%>.copyObject(<%=srcBucketName%>, <%=sourceObjectKey%>, <%=targetBucket%>,tarObj_<%=cid%> , false);
			<%
			}else{
			%>
				service_<%=cid%>.moveObject(<%=srcBucketName%>, <%=sourceObjectKey%>, <%=targetBucket%>, tarObj_<%=cid%>, false);
			<%
			}
			%>
			tarObj_<%=cid%>.closeDataInputStream();
		<%
		}
		%>
		globalMap.put("<%=cid %>_SOURCE_BUCKET",<%=srcBucketName%>);
		globalMap.put("<%=cid %>_SOURCE_OBJECTKEY",<%=sourceObjectKey%>);

		globalMap.put("<%=cid %>_DESTINATION_BUCKETNAME", <%=targetBucket%>);
		globalMap.put("<%=cid %>_DESTINATION_FOLDER", <%=targetFolder%>);
	}catch(java.lang.Exception e_<%=cid%>) {
globalMap.put("<%=cid%>_ERROR_MESSAGE",e_<%=cid%>.getMessage());
		<%
		if (("true").equals(dieOnError)) {
		%>
			throw(e_<%=cid%>);
		<%
		} else {
		%>
			if(e_<%=cid%> instanceof org.jets3t.service.ServiceException){
				org.jets3t.service.ServiceException servError_<%=cid%> = (org.jets3t.service.ServiceException)e_<%=cid%>;
				<%
				if(isLog4jEnabled){
				%>
					log.error("<%=cid%> - Exception in component <%=cid%>:" + servError_<%=cid%>.getMessage());
				<%
				}
				%>
				System.err.println("Exception in component <%=cid%>:");
				System.err.println(servError_<%=cid%>.getMessage());
				if(servError_<%=cid%>.getErrorCode()!=null){
					<%
					if(isLog4jEnabled){
					%>
						log.error("<%=cid%> - " + servError_<%=cid%>.getErrorCode());
					<%
					}
					%>
					System.err.println(servError_<%=cid%>.getErrorCode());
				}
				if(servError_<%=cid%>.getErrorMessage()!=null){
					<%
					if(isLog4jEnabled){
					%>
						log.error("<%=cid%> - " + servError_<%=cid%>.getErrorMessage());
					<%
					}
					%>
					System.err.println(servError_<%=cid%>.getErrorMessage());
				}

			}else{
				<%
				if(isLog4jEnabled){
				%>
					log.error("<%=cid%> - " + e_<%=cid%>.getMessage());
				<%
				}
				%>
				System.err.println(e_<%=cid%>.getMessage());
			}
		<%
		}
		if(!("true").equals(useExistingConn)) {
		%>
			}finally{
		if(service_<%=cid%> !=null){
			service_<%=cid%>.shutdown();
		}

		<%
		}
		%>
	}
<% } else {
  String gsProjectID=ElementParameterParser.getValue(node,"__GS_PROJECT_ID__");
%>
	<%@ include file="@{org.talend.designer.components.localprovider}/components/templates/googleStorageConnection.javajet"%>
	String targetFolder_<%=cid%>=<%=targetFolder%>;
	if(targetFolder_<%=cid%>.length()>0 && !targetFolder_<%=cid%>.endsWith("/")){
		targetFolder_<%=cid%>=targetFolder_<%=cid%>+"/";
	}
	<%
	if(isSourceFolder){
	%>
		com.google.cloud.storage.Bucket bucket_<%=cid%> = storage_<%=cid%>.get(<%=srcBucketName%>);
		com.google.cloud.storage.Storage.BlobListOption blobListOptionPrefix_<%=cid%> = com.google.cloud.storage.Storage.BlobListOption.prefix(<%=sourceObjectKey%>);
		com.google.api.gax.paging.Page<com.google.cloud.storage.Blob> allBlobs_<%=cid%> = bucket_<%=cid%>.list(blobListOptionPrefix_<%=cid%>);
		for (com.google.cloud.storage.Blob blob_<%=cid%> : allBlobs_<%=cid%>.iterateAll()) {
			String targetName_<%=cid%> = blob_<%=cid%>.getName();
			<% if(!useSrcPath) { %>
				targetName_<%=cid%> = targetFolder_<%=cid%>+targetName_<%=cid%>.substring(targetName_<%=cid%>.lastIndexOf('/') + 1);
			<% } else { %>
        		targetName_<%=cid%> = targetFolder_<%=cid%>+targetName_<%=cid%>;
      		<% } %>
			com.google.cloud.storage.CopyWriter copyWriter_<%=cid%> = blob_<%=cid%>.copyTo(<%=targetBucket%>, targetName_<%=cid%>);
			<%
			if("MOVE".equals(actionType) ){
			%>
				blob_<%=cid%>.delete();
			<%
			}
			%>
		}
<%
	}else{
%>
		com.google.cloud.storage.Blob blob_<%=cid%> = storage_<%=cid%>.get(<%=srcBucketName%>, <%=sourceObjectKey%>);
		String targetName_<%=cid%> = blob_<%=cid%>.getName();
<%
		if(!useSrcPath) {
%>
			targetName_<%=cid%> = targetFolder_<%=cid%>+targetName_<%=cid%>.substring(targetName_<%=cid%>.lastIndexOf('/') + 1);
<%
		} else {
%>
			targetName_<%=cid%> = targetFolder_<%=cid%>+targetName_<%=cid%>;
<%
		}
		if(isRename){
%>
			targetName_<%=cid%> = targetFolder_<%=cid%>+<%=newObjectKey%>;
<%
		}
%>
		com.google.cloud.storage.CopyWriter copyWriter_<%=cid%> = blob_<%=cid%>.copyTo(<%=targetBucket%>, targetName_<%=cid%>);
<%
		if("MOVE".equals(actionType) ){
%>
			blob_<%=cid%>.delete();
<%
		}
	}
%>
	globalMap.put("<%=cid %>_SOURCE_BUCKET",<%=srcBucketName%>);
	globalMap.put("<%=cid %>_SOURCE_OBJECTKEY",<%=sourceObjectKey%>);

	globalMap.put("<%=cid %>_DESTINATION_BUCKETNAME", <%=targetBucket%>);
	globalMap.put("<%=cid %>_DESTINATION_FOLDER", <%=targetFolder%>);
<%
}
%>
